/*!
 * Apollo - Children Collection
 * Copyright (c) 2012 Jake Luer <jake@qualiancy.com>
 * MIT Licensed
 */

/*!
 * Module dependencies
 */

var debug = require('sherlock')('apollo:children')
  , inherits = require('tea-inherits')
  , Hash = require('gaia-hash').Hash;

/*!
 * Primary export
 */

module.exports = Children;

function Children (ref) {
  this.ref = ref;
  Hash.call(this);
}

inherits(Children, Hash);

Children.prototype.add = function (ref) {
  this.set(ref.name, ref);
  debug('%s :: added child [%s]', this.ref.path, ref.name);
  return this;
};

Children.prototype.remove = function (ref) {
  var name = 'string' === typeof ref
    ? ref
    : ref.name;

  this.del(name);
  this.clean();
  debug('%s :: removed child [%s]', this.ref.path, name);
  return this;
};
