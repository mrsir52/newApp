/*!
 * Apollo - Registry Collection
 * Copyright (c) 2012 Jake Luer <jake@qualiancy.com>
 * MIT Licensed
 */

/*!
 * Module dependencies
 */

var debug = require('sherlock')('apollo:registry')
  , inherits = require('tea-inherits')
  , Hash  = require('gaia-hash').Hash;

/*!
 * Internal dependencies
 */

var Mailbox = require('./mailbox');

/*!
 * Primary export
 */

module.exports = Registry;

function Registry () {
  Hash.call(this);
}

inherits(Registry, Hash);

Registry.prototype.add = function (ctx, spec, opts) {
  var path = ctx.ref.path;

  if (this.has(path)) {
    debug('%s :: duplicate registry attempt', path);
    return false;
  }

  this.set(path, {
      actor: null
    , ctx: ctx
    , emitter: null
    , mailbox: new Mailbox(this, ctx.ref, opts)
    , ref: ctx.ref
    , spec: spec
  });

  debug('%s :: added to registry', path);
  return true;
};

Registry.prototype.lookup = function (ref) {
  var path = 'string' === typeof ref
    ? ref
    : ref.path;

  return this.get(path);
};

Registry.prototype.remove = function (ref) {
  var path = 'string' === typeof ref
    ? ref
    : ref.path;

  this.del(path);

  debug('%s :: removed from registry', path);
  return true;
};
